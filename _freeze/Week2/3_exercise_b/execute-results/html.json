{
  "hash": "88a2f95d20e27e2df8f49ce0b0897df1",
  "result": {
    "engine": "knitr",
    "markdown": "## Exercise B {#sec-week2-ex-b}\n\nIn preparation, you've read the paper by @laube2011. In this paper, the authors analyse speed at different scales and compare these different values. Let's conceptually reconstruct one of the experiments the authors conducted. \n\n@fig-laube2011a shows how speed was calculated in the first of three scales. Do you notice how their method differs to how we calculated speed? We calculation the speed for a specific sample to be the distance travelled to the next sample devided by the according time difference. @laube2011 use the distance travelled from the *previous* sample to the *next* sample (and the according time difference).\n\nTo reproduce this experiment, we will use a new wild boar dataset with following characteristics:\n\n- Small number of samples (200 locations)\n- Only one individual (caro) \n- A constant sampling interval (60s)\n\nThis last aspect is important, since we would otherwise have to deal with varying sampling intervals, which would greatly complicate things. \nDownload this dataset from moodle (`caro60.csv`). Import it just like you imported the other wild boar data and save it to a new variable named `caro` (note that the locations are stored in EPSG 2056).\n\n::: {#fig-laube2011a}\n\n![](../02_Images/laube_2011_2a.jpg)\n\nBlack points are used in calculation of speed, from @laube2011\n:::\n\nWe will need the following to functions from @sec-week2-ex-a:\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(\"readr\")\nlibrary(\"sf\")\nlibrary(\"dplyr\")\n\ndifftime_secs <- function(x, y){\n  as.numeric(difftime(x, y, units = \"secs\"))\n}\n\ndistance_by_element <- function(later, now){\n  as.numeric(\n    st_distance(later, now, by_element = TRUE)\n  )\n}\n```\n:::\n\nWe can then import the data. We can discard all columns with the exception of `DatetimeUTC` with `select` (see below).\n\n::: {.cell}\n\n```{.r .cell-code}\ncaro <- read_delim(\"datasets/caro60.csv\", \",\") |>\n  st_as_sf(coords = c(\"E\",\"N\"), crs = 2056) |> \n  select(DatetimeUTC)\n```\n:::\n\n### Task 1: Calculate speed at scale 1 {#sec-w2-task4}\n\nIn our first scale, we will assume a sampling window $w$ of 120 seconds. This conveniently means that for every location, you can use the previous and next location to calculate speed. Try to implement this in R.\n\n\n\nAfter completing the task, your dataset should look like this:\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nhead(caro)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2570489 ymin: 1205095 xmax: 2570589 ymax: 1205130\nProjected CRS: CH1903+ / LV95\n# A tibble: 6 × 5\n  DatetimeUTC                  geometry timelag steplength  speed\n  <dttm>                    <POINT [m]>   <dbl>      <dbl>  <dbl>\n1 2015-09-15 08:07:00 (2570589 1205095)      NA       NA   NA    \n2 2015-09-15 08:08:00 (2570573 1205096)     120       52.4  0.437\n3 2015-09-15 08:09:00 (2570536 1205099)     120       58.4  0.487\n4 2015-09-15 08:10:00 (2570518 1205115)     120       49.2  0.410\n5 2015-09-15 08:11:00 (2570499 1205130)     120       32.6  0.272\n6 2015-09-15 08:12:00 (2570489 1205130)     120       18.0  0.150\n```\n\n\n:::\n:::\n\n\n### Task 2: Calculate speed at scale 2 {#sec-w2b-task2}\n\nTo compare the effect of different sampling intervals, @laube2011 calculated speed at different scales (i.e. different sampling windows $w$). \n\nIn the previous task, we assumed a $w = 120s$. In this task, try to implement $w = 240s$ (see @fig-laube2011b), which means using an offset of *2*. \n\n- Tip: Use the `n = ` parameter in `lead`/`lag` to increase the offset.\n- Store values *timelag*, *steplength* and *speed* in the columns `timelag2`, `steplength2` and `speed2` to distinguish them from the values from scale 1\n\n::: {#fig-laube2011b}\n\n![](../02_Images/laube_2011_2b.jpg)\n\nCalculate speed at *scale 2* with a sampling window $w_2$ [from @laube2011]\n:::\n\n::: {.cell}\n\n:::\n\nAfter completing the task, your dataset should look like this:\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncaro |> \n  # drop geometry and select only specific columns\n  # to display relevant data only\n  st_drop_geometry() |> \n  select(timelag2, steplength2, speed2) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  timelag2 steplength2 speed2\n     <dbl>       <dbl>  <dbl>\n1       NA        NA   NA    \n2       NA        NA   NA    \n3      240        96.5  0.402\n4      240        90.8  0.378\n5      240        59.6  0.248\n6      240        37.3  0.155\n```\n\n\n:::\n:::\n\n### Task 3: Calculate speed at scale 3 {#sec-w2b-task3}\n\nRedo the previous task with $w = 480s$ (offset of *4*)\n\n::: {#fig-laube2011c}\n\n![](../02_Images/laube_2011_2c.jpg)\n\nCalculate speed at *scale 3* with a sampling window $w_3$ [from @laube2011]\n:::\n\n::: {.cell}\n\n:::\n\nAfter completing the task, your dataset should look like this:\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncaro |> \n  st_drop_geometry() |> \n  select(timelag3, steplength3, speed3) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  timelag3 steplength3 speed3\n     <dbl>       <dbl>  <dbl>\n1       NA        NA   NA    \n2       NA        NA   NA    \n3       NA        NA   NA    \n4       NA        NA   NA    \n5      480       102.   0.214\n6      480        82.5  0.172\n```\n\n\n:::\n:::\n\n### Task 4: Compare speed across scales\n\nWe now have a dataframe with three different speed values per sample, corresponding to the different scales / sampling windows ($w_1 = 120s$, $w_2 = 240s$ and $w_3=480s$). It would now be interesting to compare these measurements and see our results correspond to those of @laube2011. In their experiments, the authors observe:\n\n> - A steady decrease in median speed as the temporal analysis scale increases;\n> - A decrease in the overall variance in speed as the temporal scale increases;\n> - Lower minimum values at the shortest temporal scales;\n\nThe authors visualize these observations using box plots. To to the same, we need to process our data slightly. Currently, our data looks like this:\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncaro |> \n  st_drop_geometry() |> \n  select(DatetimeUTC, speed, speed2, speed3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 200 × 4\n   DatetimeUTC          speed speed2  speed3\n   <dttm>               <dbl>  <dbl>   <dbl>\n 1 2015-09-15 08:07:00 NA     NA     NA     \n 2 2015-09-15 08:08:00  0.437 NA     NA     \n 3 2015-09-15 08:09:00  0.487  0.402 NA     \n 4 2015-09-15 08:10:00  0.410  0.378 NA     \n 5 2015-09-15 08:11:00  0.272  0.248  0.214 \n 6 2015-09-15 08:12:00  0.150  0.155  0.172 \n 7 2015-09-15 08:13:00  0.195  0.140  0.0868\n 8 2015-09-15 08:14:00  0.206  0.124  0.0652\n 9 2015-09-15 08:15:00  0.104  0.146  0.0795\n10 2015-09-15 08:16:00  0.101  0.109  0.0848\n# ℹ 190 more rows\n```\n\n\n:::\n:::\n\nWe can make a box plot of a single column using ggplot2:\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(ggplot2)\n\nggplot(caro, aes(y = speed)) + \n    # we remove outliers to increase legibility, analogue\n  # Laube and Purves (2011)\n  geom_boxplot(outliers = FALSE)\n```\n\n::: {.cell-output-display}\n![](3_exercise_b_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\nHowever, if we want to compare `speed` with `speed2` and `speed3`, we need need a *long* table rather than *wide* one (which is what we currently have). To make our table *long*, we can use the function `pivot_longer` from `tidyr`:\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(tidyr)\n\n# before pivoting, let's simplify our data.frame\ncaro2 <- caro |> \n  st_drop_geometry() |> \n  select(DatetimeUTC, speed, speed2, speed3)\n\ncaro_long <- caro2 |> \n  pivot_longer(c(speed, speed2, speed3))\n  \nhead(caro_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  DatetimeUTC         name    value\n  <dttm>              <chr>   <dbl>\n1 2015-09-15 08:07:00 speed  NA    \n2 2015-09-15 08:07:00 speed2 NA    \n3 2015-09-15 08:07:00 speed3 NA    \n4 2015-09-15 08:08:00 speed   0.437\n5 2015-09-15 08:08:00 speed2 NA    \n6 2015-09-15 08:08:00 speed3 NA    \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot(caro_long, aes(name, value)) +\n  # we remove outliers to increase legibility, analogue\n  # Laube and Purves (2011)\n  geom_boxplot(outliers = FALSE)\n```\n\n::: {.cell-output-display}\n![](3_exercise_b_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "3_exercise_b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}